# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: '3'

vars:
  FL: ""

tasks:

  setup:
    silent: true
    desc: setup nuvolaris.dev ide
    cmds:
    - |
      clear
      while ! test -e ~/.wskprops
      do nuv ide login
      done
    - |
      echo "**************************************************************************************"
      echo "*** Available Commands on Terminal:"
      echo "*** 'deploy' (alias for 'nuv ide deploy') to deploy your app to https://$NUVDEV_USERNAME.nuvolaris.dev"
      echo "*** 'devel'  (alias for 'nuv ide devel') to start incremental development mode"
      echo "*** 'login'  (alias for 'nuv ide login')  to login as a different user"
      echo "*** 'nuv ide' for more informations
      echo "*** https://nuvolaris.github.io for online documentation"
      echo "**************************************************************************************"

  login:
    silent: true
    desc: login in nuvolaris.dev with Azure OpenAI access
    cmds:
    - |
      if test -n "{{._apihost_}}"
      then NUVDEV_APIHOST="{{._apihost_}}"
      else NUVDEV_APIHOST="https://nuvolaris.dev"
      fi
      echo "*** Configuring Access to $NUVOLARIS_ with Azure OpenAI ***"
      if test -z "{{._username_}}"
      then  echo -n "Enter Username: "
            read NUVDEV_USERNAME
      else NUVDEV_USERNAME="{{._username_}}"
      fi
      echo apihost=$NUVDEV_APIHOST username=$NUVDEV_USERNAME
      if nuv -login "$NUVDEV_APIHOST" "$NUVDEV_USERNAME"
      then 
        config NUVDEV_APIHOST="$NUVDEV_APIHOST"
        config NUVDEV_USERNAME="$NUVDEV_USERNAME"
        config NUVDEV_HOST="https://$NUVDEV_USERNAME.nuvolaris.dev"
        source ~/.wskprops
        config OPENAI_API_HOST=https://openai.nuvolaris.io
        config OPENAI_API_KEY="$(echo "$AUTH" | awk -F: '{print $1 }')"
      else 
        false
      fi

  serve:
    silent: true
    desc: local web server
    ignore_error: true
    cmds:
    - bash http-serve.sh "$NUV_PWD/web"

  _info:
    silent: true
    #desc: info
    cmds:
    - config -d | grep OPENAI_
    - config -d | grep NUVDEV_

  _venv:
    cmds:
    - python3 -V || die "I need python3 in the path"
    - python3 -m venv venv
    - |
      source venv/bin/activate
      pip install watchdog
    status:
    - test -d venv

  deploy:
    silent: true
    desc: deploy a project or a single action (with _action_=<dir-or-file>)
    cmds:
      - test -e "/.nuvolaris" || test -n "$NUVDEV_FORCE" || die "nuv ide commands must be run in the ghrc.io/nuvolaris/devcontainer with VSCode"
      - test -d "$NUV_PWD/packages" || die "no packages in current directory"
      - test -e ~/.wskprops || die "please run 'nuv ide login' first"
      - test -n "$NUVDEV_HOST" || die "please run 'nuv ide login' first"
      - |
        if test -e ~/.nuv/tmp/deploy.pid
        then kill "$(cat ~/.nuv/tmp/deploy.pid)" 2>/dev/null || true
        fi
      - |
        set -a
        if test -e $NUV_PWD/.env
        then source $NUV_PWD/.env
        fi
        if {{.__dry_run}}
        then DRY="--dry-run" ; ECHO='echo'
        else DRY="" ; ECHO=""
        fi
        if test -z "{{._action_}}"
        then 
            python3 -m deploy "$NUV_PWD" -d $DRY
            $ECHO nuv web upload web
            echo "URL: $NUVDEV_HOST"
        else 
            python3 -m deploy "$NUV_PWD" -s "{{._action_}}" $DRY
        fi

  devel:
    silent: true
    desc: start interactive development mode files
    cmds:
      - test -e "/.nuvolaris" || test -n "$NUVDEV_FORCE" || die "nuv ide commands must be run in the ghrc.io/nuvolaris/devcontainer with VSCode"
      - test -d "$NUV_PWD/packages" || die "no packages in current directory"
      - test -e ~/.wskprops || die "please run 'nuv ide login' first"
      - test -n "$NUVDEV_HOST" || die "please run 'nuv ide login' first"
      - |
        if test -e ~/.nuv/tmp/deploy.pid
        then kill "$(cat ~/.nuv/tmp/deploy.pid)" || true
        fi
      - |
        set -a
        if test -e $NUV_PWD/.env
        then source $NUV_PWD/.env
        fi
        if {{.__dry_run}}
        then DRY="--dry-run" ; ECHO='echo'
        else DRY="" ; ECHO=""
        fi
        python3 -m deploy "$NUV_PWD" -w $DRY
        true

  undeploy:
    desc: undeploy all the actions
    prompt: "are you sure you want to remove all actions and packages?"
    silent: true
    cmds:
    - test -e "/.nuvolaris" || die "nuv ide commands must be run in the ghrc.io/nuvolaris/devcontainer with VSCode"
    - test -e ~/.wskprops || die "please 'nuv ide login' first"
    - >
      nuv action list
      | awk  'NR>1 { print $1}' 
      | while read action ;
      do  if {{.__dry_run}}
          then echo '$' nuv action delete "$action"
          else nuv action delete "$action"
          fi
      done
    - >
      nuv package list
      | awk  'NR>1 { print $1}'
      | while read package ;
      do if {{.__dry_run}}
         then echo '$' nuv package delete "$package" 
         else nuv package delete "$package" 
         fi
      done

  clean:
    cmds:
     - test -e "/.nuvolaris" || die "nuv ide commands must be run in the ghrc.io/nuvolaris/devcontainer with VSCode"
     - test -e ~/.wskprops || die "please 'nuv ide login' first"
     - |
       if test -d "$NUV_PWD/packages" 
       then 
          echo "*** removing virtualenv"
          /bin/rm -rvf "$NUV_PWD"/packages/*/*/virtualenv/
          echo "*** removing node_modules"
          /bin/rm -rvf "$NUV_PWD"/packages/*/*/node_modules/
          echo "*** removing .zip"
          /bin/rm -vf "$NUV_PWD"/packages/*/*.zip 
       else die "no packages in current directory"
       fi

  shell:
    desc: open a bash shell with the current environment
    interactive: true
    dir: $NUV_PWD
    cmds:
    - bash 

  python:
    desc: python subcommand

  nodejs:
    desc: nodejs subcommand
